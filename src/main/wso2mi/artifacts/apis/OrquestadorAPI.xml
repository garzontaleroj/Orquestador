<api name="OrquestadorAPI" statistics="enable" trace="enable" context="/orquestador" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/consultar">
        <inSequence>

            <!-- Llamada a API de animales -->
            <property name="X-Api-Key" scope="transport" type="STRING" value="XRKsS1U9C/FZQpiTROFWsA==lwj84PYzTtsN1WBt"/>
            <property name="Host" scope="transport" type="STRING" value="api.api-ninjas.com"/>
            <header name="Content-Type" scope="transport" value="application/json"/>
            <header name="Accept" scope="transport" value="application/json"/>
            <call>
                <endpoint>
                    <http method="GET" uri-template="https://api.api-ninjas.com/v1/animals?name=cheetah"/>
                </endpoint>
            </call>
            <property name="messageType" value="application/json" scope="axis2"/>
            <property name="response1" expression="json-eval($.)" scope="default"/>

            <!-- Llamada a API de hobbies -->
            <property name="X-Api-Key" scope="transport" type="STRING" value="XRKsS1U9C/FZQpiTROFWsA==lwj84PYzTtsN1WBt"/>
            <property name="Host" scope="transport" type="STRING" value="api.api-ninjas.com"/>
            <header name="Content-Type" scope="transport" value="application/json"/>
            <header name="Accept" scope="transport" value="application/json"/>
            <call>
                <endpoint>
                    <http method="GET" uri-template="https://api.api-ninjas.com/v1/hobbies?category=general"/>
                </endpoint>
            </call>
            <property name="messageType" value="application/json" scope="axis2"/>
            <property name="response2" expression="json-eval($.)" scope="default"/>
            <property name="ruta_completa_1" scope="default" type="STRING" value="pruebachoreo1/"/>
            <property name="ruta_completa_2" scope="default" type="STRING" value="pruebachoreo2/"/>
            <!-- Generar timestamp y ruta del archivo -->
            <script language="js"><![CDATA[
                var now = new Date();
                var pad = function(n) { return n < 10 ? '0' + n : n; };
                var timestamp = now.getFullYear() + pad(now.getMonth()+1) + pad(now.getDate()) + "_" +
                                pad(now.getHours()) + pad(now.getMinutes()) + pad(now.getSeconds());
                mc.setProperty("nombre_archivo", "resultado_" + timestamp + ".json");
                mc.setProperty("ruta_completa_1", mc.getProperty("ruta_completa_1") + mc.getProperty("nombre_archivo"));
                mc.setProperty("ruta_completa_2", mc.getProperty("ruta_completa_2") + mc.getProperty("nombre_archivo"));
            ]]></script>

            <!-- Combinar respuestas como JSON -->
            <payloadFactory media-type="text">
                <format>{
                    "respuesta1": $1,
                    "respuesta2": $2
                    }</format>
                <args>
                    <arg evaluator="json" expression="$ctx:response1"/>
                    <arg evaluator="json" expression="$ctx:response2"/>
                </args>
            </payloadFactory>

            <!-- Forzar el body como texto plano (clave para eliminar formato SOAP) -->
            <enrich>
                <source type="inline" clone="true">
                    <format media-type="text">{$body}</format>
                </source>
                <target type="body"/>
            </enrich>

            <!-- Guardar contenido en propiedad -->
            <property name="contenido_archivo" expression="$body" scope="default"/>

            <filter xpath="json-eval($.respuesta2.category) = 'general'">
                <then>
                    <!-- Guardar archivo como JSON plano -->
                    <file.write configKey="sftp_1">
                        <filePath>{$ctx:ruta_completa_1}</filePath>
                        <contentOrExpression>{$ctx:contenido_archivo}</contentOrExpression>
                        <writeMode>Overwrite</writeMode>
                        <encoding>UTF-8</encoding>
                        <mimeType>application/json</mimeType>
                        <responseVariable>resultado_salida_sftp</responseVariable>
                        <overwriteBody>true</overwriteBody>
                    </file.write>

                    <!-- Confirmación -->
                    <payloadFactory media-type="json">
                        <format>{"mensaje":"Archivo SFTP generado correctamente a # ftp 1","archivo":"$1"}</format>
                        <args>
                            <arg expression="get-property('default','nombre_archivo')"/>
                        </args>
                    </payloadFactory>
                    <respond/>
                </then>
                <else>

                    <!-- Guardar archivo como JSON plano -->
                    <file.write configKey="sftp_2">
                        <filePath>{$ctx:ruta_completa_2}</filePath>
                        <contentOrExpression>{$ctx:contenido_archivo}</contentOrExpression>
                        <writeMode>Overwrite</writeMode>
                        <encoding>UTF-8</encoding>
                        <mimeType>application/json</mimeType>
                        <responseVariable>resultado_salida_sftp</responseVariable>
                        <overwriteBody>true</overwriteBody>
                    </file.write>

                     <payloadFactory media-type="json">
                        <format>{"mensaje":"Archivo SFTP generado correctamente a ftp #2","archivo":"$1"}</format>
                        <args>
                            <arg expression="get-property('default','nombre_archivo')"/>
                        </args>
                    </payloadFactory>
                    <respond/>
                </else>
            </filter>
            
            <respond/>
        </inSequence>

        <outSequence>
            <log level="full"/>
            <respond/>
        </outSequence>
    </resource>
    <resource methods="GET" uri-template="/usuarios">
        <inSequence>
            <log category="INFO" logMessageID="true" logFullPayload="true">
                <message>Se muestran los datos de la lista de usuarios</message>
            </log>
            <payloadFactory description="se crea la carga util del servicio de lista de usuarios" media-type="json" template-type="default">
                <format>[
                    {
                    "nombre_completo": "Laura Martínez",
                    "cargo": "Analista de Datos",
                    "anio_ingreso": 2018,
                    "salario": 4200000,
                    "sexo": "F",
                    "experiencia": 5
                    },
                    {
                    "nombre_completo": "Carlos Rodríguez",
                    "cargo": "Desarrollador Backend",
                    "anio_ingreso": 2020,
                    "salario": 4800000,
                    "sexo": "M",
                    "experiencia": 4
                    },
                    {
                    "nombre_completo": "Daniela López",
                    "cargo": "Diseñadora UX",
                    "anio_ingreso": 2019,
                    "salario": 4500000,
                    "sexo": "F",
                    "experiencia": 6
                    },
                    {
                    "nombre_completo": "Andrés García",
                    "cargo": "Gerente de Proyectos",
                    "anio_ingreso": 2015,
                    "salario": 7200000,
                    "sexo": "M",
                    "experiencia": 10
                    },
                    {
                    "nombre_completo": "Valentina Torres",
                    "cargo": "QA Tester",
                    "anio_ingreso": 2021,
                    "salario": 3900000,
                    "sexo": "F",
                    "experiencia": 3
                    },
                    {
                    "nombre_completo": "Miguel Ángel Pérez",
                    "cargo": "Administrador de Redes",
                    "anio_ingreso": 2017,
                    "salario": 4600000,
                    "sexo": "M",
                    "experiencia": 7
                    },
                    {
                    "nombre_completo": "Camila Rincón",
                    "cargo": "Analista Financiera",
                    "anio_ingreso": 2016,
                    "salario": 5300000,
                    "sexo": "F",
                    "experiencia": 8
                    },
                    {
                    "nombre_completo": "Julián Mendoza",
                    "cargo": "Arquitecto de Software",
                    "anio_ingreso": 2014,
                    "salario": 8500000,
                    "sexo": "M",
                    "experiencia": 12
                    },
                    {
                    "nombre_completo": "Paola Jiménez",
                    "cargo": "Ingeniera de Sistemas",
                    "anio_ingreso": 2022,
                    "salario": 4000000,
                    "sexo": "F",
                    "experiencia": 2
                    },
                    {
                    "nombre_completo": "Sebastián Ramírez",
                    "cargo": "Soporte Técnico",
                    "anio_ingreso": 2019,
                    "salario": 3600000,
                    "sexo": "M",
                    "experiencia": 5
                    },
                    {
                    "nombre_completo": "Natalia Cruz",
                    "cargo": "Líder de Innovación",
                    "anio_ingreso": 2013,
                    "salario": 7900000,
                    "sexo": "F",
                    "experiencia": 11
                    },
                    {
                    "nombre_completo": "Tomás Herrera",
                    "cargo": "Desarrollador Frontend",
                    "anio_ingreso": 2020,
                    "salario": 4700000,
                    "sexo": "M",
                    "experiencia": 4
                    },
                    {
                    "nombre_completo": "Mariana Suárez",
                    "cargo": "Scrum Master",
                    "anio_ingreso": 2018,
                    "salario": 6100000,
                    "sexo": "F",
                    "experiencia": 7
                    },
                    {
                    "nombre_completo": "Felipe Castaño",
                    "cargo": "Técnico de Soporte",
                    "anio_ingreso": 2021,
                    "salario": 3500000,
                    "sexo": "M",
                    "experiencia": 3
                    },
                    {
                    "nombre_completo": "Isabela Moreno",
                    "cargo": "Especialista en Ciberseguridad",
                    "anio_ingreso": 2017,
                    "salario": 6800000,
                    "sexo": "F",
                    "experiencia": 8
                    },
                    {
                    "nombre_completo": "Diego Salazar",
                    "cargo": "Analista BI",
                    "anio_ingreso": 2016,
                    "salario": 5400000,
                    "sexo": "M",
                    "experiencia": 9
                    },
                    {
                    "nombre_completo": "Karina Velásquez",
                    "cargo": "Ingeniera DevOps",
                    "anio_ingreso": 2023,
                    "salario": 5500000,
                    "sexo": "F",
                    "experiencia": 2
                    },
                    {
                    "nombre_completo": "Juan Pablo León",
                    "cargo": "Consultor SAP",
                    "anio_ingreso": 2012,
                    "salario": 9000000,
                    "sexo": "M",
                    "experiencia": 13
                    },
                    {
                    "nombre_completo": "Alejandra Quintero",
                    "cargo": "Product Owner",
                    "anio_ingreso": 2015,
                    "salario": 7000000,
                    "sexo": "F",
                    "experiencia": 10
                    },
                    {
                    "nombre_completo": "Santiago Mejía",
                    "cargo": "Técnico Electrónico",
                    "anio_ingreso": 2020,
                    "salario": 3800000,
                    "sexo": "M",
                    "experiencia": 4
                    }
                    ]</format>
            </payloadFactory>
            <respond description="se responde al cliente"/>
        </inSequence>
        <faultSequence>
        </faultSequence>
    </resource>
</api>
